<?xml version="1.0"?>
<rodent_pkg xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="rodent-pkg.xsd">
  <yum>
    <!--confirm string="[Y/n]"/-->
     <option loption="assumeyes">
       -y, --assumeyes
              Assume yes; assume that the answer to any question which would be asked is  yes.
              Configuration Option: assumeyes
     </option>
     <option loption="quiet">
       -q, --quiet
              Run without output.  Note that you likely also want to use -y.
     </option>
     <option loption="verbose">
       -v, --verbose
              Run with a lot of debugging output.
     </option>
     <option loption="cacheonly">
              Tells yum to run entirely from system cache - does not download  or  update  any
              headers  unless  it has to to perform the requested action. If you’re using this
              as a user yum will not use the tempcache for the user but will only use the sys-
              tem cache in the system cachedir.
     </option>
     <option loption="version">
              Reports  the yum version number and installed package versions for everything in
              history_record_packages (can be added to by plugins).
     </option>
     <option loption="showduplicates">
              Doesn’t limit packages to their latest versions in the  info,  list  and  search
              commands (will also affect plugins which use the doPackageLists() API).
     </option>
     <option loption="obsoletes">
              This option only has affect for an update, it enables yum´s obsoletes processing
              logic. For more information see the update command above.
              Configuration Option: obsoletes
     </option>
     <option loption="noplugins">
              Run with all plugins disabled.
              Configuration Option: plugins
     </option>
     <option loption="nogpgcheck">
              Run with GPG signature checking disabled.
              Configuration Option: gpgcheck
     </option>
     <option loption="skip-broken">
              Resolve depsolve problems by removing packages that are  causing  problems  from
              the transaction.
              Configuration Option: skip_broken
     </option>
      <option loption="tolerant">
              This option currently does nothing.
     </option>
    <option loption="config" parameter="config file">
       -c, --config=[config file]
              Specifies  the  config file location - can take HTTP and FTP URLs and local file
              paths.
     </option>
     <option loption="debuglevel" parameter="number">
       -d, --debuglevel=[number]
              Sets the debugging level to [number] - turns up or down  the  amount  of  things
              that are printed. Practical range: 0 - 10
              Configuration Option: debuglevel
     </option>
     <option loption="errorlevel" parameter="number">
       -e, --errorlevel=[number]
              Sets  the  error  level  to  [number] Practical range 0 - 10. 0 means print only
              critical errors about which you must be told. 1 means  print  all  errors,  even
              ones  that are not overly important. 1+ means print more errors (if any) -e 0 is
              good for cron jobs.
              Configuration Option: errorlevel
     </option>
     <option loption="rpmverbosity" parameter="name">
       --rpmverbosity=[name]
              Sets the debug level to [name] for rpm scriptlets. ’info’ is the default,  other
              options are: ’critical’, ’emergency’, ’error’, ’warn’ and ’debug’.
              Configuration Option: rpmverbosity
     </option>
     <option loption="randomwait" parameter="time in minutes">
       -R, --randomwait=[time in minutes]
              Sets  the  maximum amount of time yum will wait before performing a command - it
              randomizes over the time.
     </option>
     <option loption="installroot" parameter="root">
              Specifies  an  alternative  installroot,  relative to which all packages will be
              installed.
              Configuration Option: installroot
     </option>
     <option loption="enablerepo" parameter="repoidglob">
       --enablerepo=repoidglob
              Enables specific repositories by id or glob that have been disabled in the  con-
              figuration file using the enabled=0 option.
              Configuration Option: enabled
     </option>
     <option loption="disablerepo" parameter="">
       --disablerepo=repoidglob
              Disables specific repositories by id or glob.
              Configuration Option: enabled
     </option>
     <option loption="exclude" parameter="package">
       -x, --exclude=package
              Exclude a specific package by name or glob from  updates  on  all  repositories.
              Configuration Option: exclude
     </option>
     <option loption="color" parameter="always|auto|never">
       --color=[always|auto|never]
              Display colorized output automatically, depending on the output terminal, always
              (using ANSI codes) or never. Note that some commands (Eg. list and info) will do
              a little extra work when color is enabled.  Configuration Option: color
     </option>
     <option loption="disableexcludes" parameter="all|main|repoid">
       --disableexcludes=[all|main|repoid]
              Disable the excludes defined in your config files. Takes one of three options:
              all == disable all excludes
              main == disable excludes defined in [main] in yum.conf
              repoid == disable excludes defined for that repo
     </option>
     <option loption="disableplugin" parameter="plugin">
       --disableplugin=plugin
              Run with one or more plugins disabled, the argument is a comma separated list of
              wildcards to match against plugin names.
     </option>
     <option loption="releasever" parameter="version">
       --releasever=version
              Pretend  the  current  release  version is the given string. This is very useful
              when combined with --installroot. Note that with the default upstream  cachedir,
              of  /var/cache/yum,  using  this option will corrupt your cache (and you can use
              $releasever in your cachedir configuration to stop this).
     </option>
     <option loption="setopt" parameter="option=value">
       --setopt=option=value
              Set any config option in yum config or repo files. For  options  in  the  global
              config    just    use:    --setopt=option=value    for    repo    options   use:
              --setopt=repoid.option=value
     </option>
    <action pkg="yum" command_options="1" icon="xffm/emblem_centos"
     no_selection="1" protected="1" local="1" remote="1" 
     argument="argument">
       yum  is an interactive, rpm based, package manager. It can automatically perform system
       updates, including dependency analysis and obsolete processing  based  on  "repository"
       metadata. It can also perform installation of new packages, removal of old packages and
       perform queries on the installed  and/or  available  packages  among  many  other  com-
       mands/services  (see  below).  yum is similar to other high level package managers.
    </action>
    <action pkg="yum" cmd="search" string="Search"  icon="xffm/emblem_find" command_options="1" 
     no_selection="1"  
     argument="argument">
              This is used to find packages when you know  something  about  the  package  but
              aren’t  sure  of  it’s  name.  By default search will try searching just package
              names and summaries, but if that "fails" it will then try descriptions and  url.

              Yum  search  orders  the results so that those packages matching more terms will
              appear first.
 
              You can force searching everything by specifying "all" as the first argument.
    </action>
    <action pkg="yum" cmd=" -y install" string="Install"  icon="xffm/emblem_greenball" command_options="1"
     no_selection="1" protected="1" remote="1" 
     argument="argument" >
              Is used to install the latest version of a package or group  of  packages  while
              ensuring that all dependencies are satisfied.  (See Specifying package names for
              more information) If no package matches the  given  package  name(s),  they  are
              assumed  to  be  a  shell  glob  and any matches are then installed. If the name
              starts with an @ character the rest of the name is used as though passed to  the
              groupinstall  command.  If  the name starts with a - character, then a search is
              done within the transaction and any matches are removed. If the name is a  file,
              then  install works like localinstall. If the name doesn’t match a package, then
              package  "provides"  are  searched  (e.g.  "_sqlitecache.so()(64bit)")  as   are
              filelists  (Eg.  "/usr/bin/yum").  Also  note that for filelists, wildcards will
              match multiple packages.
    </action>
    <action pkg="yum" cmd="-y erase" string="Uninstall"  icon="xffm/stock_remove" command_options="1" 
     no_selection="1" protected="1" local="1" 
     argument="argument">
              used  to  remove the specified packages from the system as well as removing
              any packages which depend on the  package  being  removed.  remove  operates  on
              groups, files, provides and filelists just like the "install" command.(See Spec-
              ifying package names for more information)

              Note that "yum" is included in the protected_packages configuration, by default.
              So you can’t accidentally remove yum itself.
    </action>
    <action pkg="yum" cmd="-y update" string="Upgrade"  icon="xffm/emblem_synchronized" command_options="1" 
     no_selection="1" protected="1" local="1"  
     argument="argument">
              If run without any packages, update will update every currently installed  pack-
              age.   If  one  or  more  packages or package globs are specified, Yum will only
              update the listed packages.  While updating packages, yum will ensure  that  all
              dependencies  are satisfied. (See Specifying package names for more information)
              If the packages or globs specified match to packages  which  are  not  currently
              installed  then  update will not install them. update operates on groups, files,
              provides and filelists just like the "install" command.

              If the main obsoletes configure option is true (default) or the --obsoletes flag
              is  present  yum will include package obsoletes in its calculations - this makes
              it better for distro-version changes, for example: upgrading from somelinux  8.0
              to somelinux 9.

              Note  that  "update" works on installed packages first, and only if there are no
              matches does it look for available packages. The difference is  most  noticeable
              when  you  do "update foo-1-2" which will act exactly as "update foo" if foo-1-2
              is installed. You can use the "update-to" if you’d prefer that nothing happen in
              the above case.
    </action>
    <action pkg="yum" cmd="update-to" command_options="1"  
     no_selection="1" protected="1" local="1"
     argument="argument" >
       update-to
              This command works like "update" but always specifies the version of the package
              we want to update to.
    </action>
    <action pkg="yum" cmd="check-update" command_options="1"  
     no_selection="1" protected="1" 
     argument="argument">
              Implemented so you could know if your machine had any updates that needed to  be
              applied without running it interactively. Returns exit value of 100 if there are
              packages available for an update. Also returns a list  of  the  packages  to  be
              updated  in  list  format.  Returns  0  if no packages are available for update.
              Returns 1 if an error occurred.  Running in verbose mode also shows obsoletes.
    </action>
    <action pkg="yum" cmd="distro-sync"  command_options="1" 
     no_selection="1" protected="1"
     argument="argument">
              Synchronizes the installed package set with the latest packages available,  this
              is done by either obsoleting, upgrading or downgrading as appropriate. This will
              "normally" do the same thing as the upgrade command  however  if  you  have  the
              package  FOO installed at version 4, and the latest available is only version 3,
              then this command will downgrade FOO to version 3.

              This command does not perform operations on groups, local packages  or  negative
              selections.
    </action>

    <action pkg="yum" cmd="-y clean" string="Clean"  argument="option" command_options="1" 
     no_selection="1" protected="1">
Options:
    expire-cache
              Eliminate the local data saying when the metadata  and  mirrorlists  were  down-
              loaded  for  each  repo. This means yum will revalidate the cache for each repo.
              next time it is used. However if the cache is still valid,  nothing  significant
              was deleted.
    packages
              Eliminate any cached packages from the system.  Note that packages are not auto-
              matically deleted after they are downloaded.
    headers
              Eliminate all of the header files, which old versions of yum used for dependency
              resolution.
    metadata
              Eliminate  all  of the files which yum uses to determine the remote availability
              of packages. Using this option will force yum to download all the  metadata  the
              next time it is run.
    dbcache
              Eliminate  the  sqlite  cache  used  for  faster access to metadata.  Using this
              option will force yum to download the sqlite metadata the next time it  is  run,
              or recreate the sqlite metadata if using an older repo.
    rpmdb
              Eliminate any cached data from the local rpmdb.
    plugins
             Tell any enabled plugins to eliminate their cached data.
    all
              Does all of the above.
    </action>
    <action pkg="yum" cmd="list " command_options="1"   argument="option [all | glob_exp1] [glob_exp2] [...]"
     no_selection="1" protected="1">
all
              All of the following
available
              List all available and installed packages.
updates
              List all packages with updates available in the yum repositories.
installed
              List  the packages specified by args.  If an argument does not match the name of
              an available package, it is assumed to be a shell-style glob and any matches are
              printed.
extras
              List  the  packages  installed  on  the system that are not available in any yum
              repository listed in the config file.
obsoletes
              List the packages installed on the system that are obsoleted by packages in  any
              yum repository listed in the config file.
recent
              List  packages  recently added into the repositories. This is often not helpful,
              but what you may really want to use is "yum list-updateinfo new" from the  secu-
              rity yum plugin.
provides or whatprovides
              Is used to find out which package provides some feature or file. Just use a spe-
              cific  name  or  a  file-glob-syntax wildcards to list the packages available or
              installed that provide that feature or file.
    </action>
    <action pkg="yum" cmd="info" argument="info option [all | glob_exp1] [glob_exp2] [...]" command_options="1" 
     no_selection="1" protected="1">
all
              All of the following
available
              List all available and installed packages.
updates
              List all packages with updates available in the yum repositories.
installed
              List  the packages specified by args.  If an argument does not match the name of
              an available package, it is assumed to be a shell-style glob and any matches are
              printed.
extras
              List  the  packages  installed  on  the system that are not available in any yum
              repository listed in the config file.
obsoletes
              List the packages installed on the system that are obsoleted by packages in  any
              yum repository listed in the config file.
recent
              List  packages  recently added into the repositories. This is often not helpful,
              but what you may really want to use is "yum list-updateinfo new" from the  secu-
              rity yum plugin.
provides or whatprovides
              Is used to find out which package provides some feature or file. Just use a spe-
              cific  name  or  a  file-glob-syntax wildcards to list the packages available or
              installed that provide that feature or file.

    </action>

  </yum>
</rodent_pkg>
