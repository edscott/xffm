<?xml version="1.0"?>
<rodent_pkg xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="rodent-pkg.xsd">
  <zypper>
    <confirm string="[Y/n]"/>
    <confirm string="[y/N]"/>
        <option loption="non-interactive">
        --non-interactive, -n   Do not ask anything, use default answers
                                automatically.
        </option>
        <option loption="non-interactive-include-reboot-patches">
       --non-interactive-include-reboot-patches
                                Do not treat patches as interactive, which have
                                the rebootSuggested-flag set.
        </option>
        <option loption="help">
        --help, -h              Help.
        </option>
        <option loption="version">
        --version, -V           Output the version number.
        </option>
        <option loption="promptids">
        --promptids             Output a list of zypper's user prompts.
        </option>
        <option loption="quiet">
        --quiet, -q             Suppress normal output, print only error
                                messages.
        </option>
        <option loption="verbose">
        --verbose, -v           Increase verbosity.
        </option>
        <option loption="no-abbrev">
        --no-abbrev, -A         Do not abbreviate text in tables.
        </option>
        <option loption="table-style">
        --table-style, -s       Table style (integer).
        </option>
        <option loption="rug-compatible">
        --rug-compatible, -r    Turn on rug compatibility.
        </option>
        <option loption="xmlout">
       --xmlout, -x            Switch to XML output.
        </option>
        <option loption="ignore-unknown">
       --ignore-unknown, -i    Ignore unknown packages.
        </option>
        <option loption="no-gpg-checks">
        --no-gpg-checks         Ignore GPG check failures and continue.
        </option>
        <option loption="gpg-auto-import-keys">
        --gpg-auto-import-keys  Automatically trust and import new repository
                                signing keys.
        </option>
        <option loption="disable-repositories">
       --disable-repositories  Do not read meta-data from repositories.
        </option>
        <option loption="no-refresh">
        --no-refresh            Do not refresh the repositories.
        </option>
        <option loption="no-cd">
        --no-cd                 Ignore CD/DVD repositories.
        </option>
        <option loption="no-remote">
        --no-remote             Ignore remote repositories.
        </option>
        <option loption="disable-system-resolvables">
        --disable-system-resolvables
                                Do not read installed packages.
        </option>
        <option loption="config" parameter="file">
        --config, -c 'file'     Use specified config file instead of the default.       
        </option>
        <option loption="userdata" parameter="string">
        --userdata 'string'     User defined transaction id used in history and plugins.
        </option>
        <option loption="reposd-dir" parameter="dir">
        --reposd-dir, -D 'dir'  Use alternative repository definition file
                                directory.      
        </option>
        <option loption="cache-dir" parameter="dir">
        --cache-dir, -C 'dir'   Use alternative directory for all caches.       
        </option>
        <option loption="raw-cache-dir" parameter="dir">
        --raw-cache-dir 'dir'   Use alternative raw meta-data cache directory.  
        </option>
        <option loption="solv-cache-dir" parameter="dir">
        --solv-cache-dir 'dir'  Use alternative solv file cache directory.
        </option>
        <option loption="pkg-cache-dir" parameter="dir">
        --pkg-cache-dir 'dir'   Use alternative package cache directory.
        </option>
        <option loption="plus-repo" parameter="URI">
        --plus-repo, -p 'URI'   Use an additional repository.
        </option>
        <option loption="root" parameter="dir">
        --root, -R 'dir'        Operate on a different root directory.
        </option>
    <action pkg="zypper"   command_options="1" actions="1"
    protected="1" local="1" remote="1" no_selection="1"
     icon="xffm/emblem_opensuse">
       zypper  is  a command-line interface to ZYpp system management library.  It
       can be used to install, update, remove software, manage repositories,  per-
       form various queries, and more.
    </action>
<!-- here goes download -->
    <action pkg="zypper" cmd="-n install --download-only" string="Download"  
     command_options="1"
     protected="1" remote="1" icon="xffm/emblem_blueball"  no_selection="1"
     argument="package">
download-only         Only download the packages, do not install.
    </action>

    <action pkg="zypper" cmd="-n install" string="Install"  command_options="1"
     protected="1" remote="1" icon="xffm/emblem_greenball"  no_selection="1"
     argument="package">
              Install or update packages.

              The  packages  can be selected by their name or by a capability they
              provide.

              For example: zypper=0.8.8-2.

              The NAME component of a capability is not only a  package  name  but
              any    symbol   provided   by   packages:   /bin/vi,   libcurl.so.3,
              perl(Time::ParseDate).  Just remember to quote to protect  the  spe-
              cial characters from the shell.

     <option loption="from" parameter="alias|#URI">
    --from 'alias|#|URI'    Select packages from the specified repository.
     </option>
     <option loption="repo" parameter="alias|#URIalias|#URI">
-r, --repo 'alias|#|URI'    Load only the specified repository.
     </option>
     <option loption="type" parameter="type">
-t, --type 'type'           Type of package (package, patch, pattern, product, srcpackage).
     </option>
     <option loption="name">
-n, --name                  Select packages by plain name, not by capability.
     </option>
     <option loption="capability">
-C, --capability            Select packages by capability.
     </option>
     <option loption="force">
-f, --force                 Install even if the item is already installed (reinstall),
                            downgraded or changes vendor or architecture.
     </option>
     <option loption="oldpackage">
    --oldpackage            Allow to replace a newer item with an older one.
                            Handy if you are doing a rollback. Unlike --force
                            it will not enforce a reinstall.
     </option>
     <option loption="auto-agree-with-licenses">
-l, --auto-agree-with-licenses
                            Automatically say 'yes' to third party license
                            confirmation prompt.
                            See 'man zypper' for more details.
     </option>
     <option loption="debug-solver">
    --debug-solver          Create solver test case for debugging.
     </option>
     <option loption="no-recommends">
    --no-recommends         Do not install recommended packages, only required.
     </option>
     <option loption="recommends">
    --recommends            Install also recommended packages in addition
                            to the required.
     </option>
     <option loption="no-force-resolution">
-R, --no-force-resolution   Do not force the solver to find solution,
                            let it ask.
     </option>
     <option loption="force-resolution">
    --force-resolution      Force the solver to find a solution (even
                            an aggressive one).
     </option>
     <option loption="dry-run">
-D, --dry-run               Test the installation, do not actually install.
     </option>
     <option loption="download">
    --download              Set the download-install mode. Available modes:
                            only, in-advance, in-heaps, as-needed
     </option>
     <option loption="download-only">
-d, --download-only         Only download the packages, do not install.
     </option>

    </action>
    <action pkg="zypper" cmd="-n remove" string="Uninstall"  command_options="1"
     icon="xffm/stock_remove" protected="1" local="1"  no_selection="1"
     argument="package">
              Remove (uninstall) packages.

              The  packages  can  be selected by their name or by a capability
              they provide.  For details on package selection see the  install
              command description.
     <option loption="repo" parameter="alias|#URI">
-r, --repo 'alias|#|URI'    Load only the specified repository.
     </option>
     <option loption="type" parameter="type">
-t, --type 'type'           Type of package (package, patch, pattern, product, srcpackage).
     </option>
     <option loption="name">
-n, --name                  Select packages by plain name, not by capability.
     </option>
     <option loption="capability">
-C, --capability            Select packages by capability.
     </option>
     <option loption="debug-solver">
    --debug-solver          Create solver test case for debugging.
     </option>
     <option loption="no-force-resolution">
-R, --no-force-resolution   Do not force the solver to find solution,
                            let it ask.
     </option>
     <option loption="force-resolution">
    --force-resolution      Force the solver to find a solution (even
                            an aggressive one).
     </option>
     <option loption="clean-deps">
-u, --clean-deps            Automatically remove unneeded dependencies.
     </option>
     <option loption="no-clean-deps">
-U, --no-clean-deps         No automatic removal of unneeded dependencies.
     </option>
     <option loption="dry-run">
-D, --dry-run               Test the removal, do not actually remove.
     </option>

    </action>
    <action pkg="zypper" cmd="-n update" string="Upgrade"  command_options="1"
     protected="1" remote="1" local="1" no_selection="1"
     icon="xffm/emblem_synchronized"  
     argument="package">
              Update installed packages with newer versions, where possible.

              This command will not update packages which would require change
              of   package   vendor   unless   the   vendor  is  specified  in
              /etc/zypp/vendors.d, or which would require manual resolution of
              problems  with  dependencies.  Such non-installable updates will
              then be listed in separate section of the summary as  "The  fol-
              lowing package updates will NOT be installed:".

              To  update  individual  packages,  specify  one  or more package
              names. You can use the '*' and '?' wildcard  characters  in  the
              package names to specify multiple packages matching the pattern.
     <option loption="repo" parameter="alias|#URI">
-r, --repo 'alias|#|URI'    Load only the specified repository.
     </option>
     <option loption="type" parameter="type">
-t, --type 'type'           Type of package (package, patch, pattern, product, srcpackage).
     </option>
     <option loption="debug-solver">
    --debug-solver          Create solver test case for debugging.
     </option>
     <option loption="auto-agree-with-licenses">
-l, --auto-agree-with-licenses
                            Automatically say 'yes' to third party license
                            confirmation prompt.
                            See man zypper for more details.
     </option>
     <option loption="best-effort">
    --best-effort           Do a 'best effort' approach to update. Updates
                            to a lower than the latest version are
                            also acceptable.
     </option>
     <option loption="download">
    --download              Set the download-install mode. Available modes:
                            only, in-advance, in-heaps, as-needed
     </option>
     <option loption="download-only">
-d, --download-only         Only download the packages, do not install.
     </option>
     <option loption="skip-interactive">
    --skip-interactive      Skip interactive updates.
     </option>
     <option loption="no-recommends">
    --no-recommends         Do not install recommended packages, only required.
     </option>
     <option loption="recommends">
    --recommends            Install also recommended packages in addition
                            to the required.
     </option>
     <option loption="no-force-resolution">
-R, --no-force-resolution   Do not force the solver to find solution,
                            let it ask.
     </option>
     <option loption="force-resolution">
    --force-resolution      Force the solver to find a solution (even
                            an aggressive one).
     </option>
     <option loption="dry-run">
-D, --dry-run               Test the update, do not actually update.
     </option>

    </action>
    <action pkg="zypper" cmd="search" string="Search"  icon="xffm/emblem_find"
     command_options="1" no_selection="1"
     argument="pattern/pkg_name">
              Search  for  packages  matching any of the given strings. * (any
              substring) and ?  (any character) wildcards  can  also  be  used
              within search strings.  If the search string is enclosed in '/',
              for example $ zypper se '/^k.*e$/', it's interpreted as a  regu-
              lar expression.  It's also possible to specify a capability.

              Results of search are printed in a table with following columns:
              S (status), Catalog, Type (type of package), Name, Version, Arch
              (architecture). The status column can contain the following val-
              ues: i - installed, v - another version installed, or  an  empty
              space for neither of the former cases.

              The  'v'  status  is only shown if the version or the repository
              matters (--details or --repo is used), and the installed version
              differs  from  the one listed or is from a repository other than
              specified.
     <option loption="match-substrings">
    --match-substrings     Search for a match to partial words (default).
     </option>
     <option loption="match-words">
    --match-words          Search for a match to whole words only.
     </option>
     <option loption="match-exact">
    --match-exact          Searches for an exact match of the search strings.
     </option>
     <option loption="provides">
    --provides             Search for packages which provide the search strings.
     </option>
     <option loption="recommends">
    --recommends           Search for packages which recommend the search strings.
     </option>
     <option loption="requires">
    --requires             Search for packages which require the search strings.
     </option>
     <option loption="suggests">
    --suggests             Search what packages are suggested by the search strings.     
     </option>
     <option loption="conflicts">
    --conflicts            Search packages conflicting with search strings.
     </option>
     <option loption="obsoletes">
    --obsoletes            Search for packages which obsolete the search strings.
     </option>
     <option loption="name">
-n, --name                 Useful together with dependency options, otherwise
                           searching in package name is default.
     </option>
     <option loption="file-list">
-f, --file-list            Search for a match in the file list of packages.
     </option>
     <option loption="search-descriptions">
-d, --search-descriptions  Search also in package summaries and descriptions.
     </option>
     <option loption="case-sensitive">
-C, --case-sensitive       Perform case-sensitive search.
     </option>
     <option loption="installed-only">
-i, --installed-only       Show only packages that are already installed.
     </option>
     <option loption="uninstalled-only">
-u, --uninstalled-only     Show only packages that are not currently installed.
     </option>
     <option loption="repo" parameter="alias|#URI">
-r, --repo 'alias|#|URI'    Load only the specified repository.
     </option>
     <option loption="type" parameter="type">
-t, --type 'type'           Type of package (package, patch, pattern, product, srcpackage).
     </option>
     <option loption="sort-by-name">
    --sort-by-name         Sort packages by name (default).
     </option>
     <option loption="sort-by-repo">
    --sort-by-repo         Sort packages by repository.
     </option>
     <option loption="details">
-s, --details              Show each available version in each repository
                           on a separate line.
     </option>

    </action>
    <action pkg="zypper" cmd="-n refresh" string="Refresh"  command_options="1"
     no_selection="1" protected="1"  icon="xffm/emblem_synchronized">
       Refreshing a repository means downloading metadata of packages from the
       medium  (if  needed),  storing  it  in  local  cache  (typically  under
       /var/cache/zypp/raw/alias directory) and preparsing the metadata into
       .solv   files   (building   the   solv    cache),    typically    under
       /var/cache/zypp/solv/alias.

       The  metadata get refreshed either automatically or on user request. An
       automatic refresh takes place right before reading  metadata  from  the
       database  if  the  auto-refresh  is  enabled for the repository and the
       metada is reported to be out of date. If the auto-refresh is  disabled,
       the  repository will only be refreshed on user request. You can request
       a refresh by calling zypper  refresh  (see  the  documentation  of  the
       refresh command for details).

       The  repository  metadata are checked for changes before actually doing
       the refresh. A change is detected by downloading one  or  two  metadata
       index  files  (small  files)  and comparing the checksums of the cached
       ones and the remote ones. If the files differ, the repository is out of
       date and will be refreshed.

       To  delay  the  up-to-date check (and thus the automatic refresh) for a
       certain number of minutes, edit the  value  of  the  repo.refresh.delay
       attribute of ZYpp config file (/etc/zypp/zypp.conf). This means, zypper
       will not even try to download and check the index files, and  you  will
       be able to use zypper for operations like search or info without inter-
       net access or root privileges.
     <option loption="force">
-f, --force              Force a complete refresh.
     </option>
     <option loption="force-build">
-b, --force-build        Force rebuild of the database.
     </option>
     <option loption="force-download">
-d, --force-download     Force download of raw metadata.
     </option>
     <option loption="build-only">
-B, --build-only         Only build the database, don't download metadata.
     </option>
     <option loption="download-only">
-D, --download-only      Only download raw metadata, don't build the database.
     </option>
     <option loption="repo" parameter="alias|#URI">
-r, --repo 'alias|#|URI'      List only updates from the specified repository.
     </option>
     <option loption="services">
-s, --services           Refresh also services before refreshing repos.
     </option>

    </action>
    <action pkg="zypper" cmd="-n clean" string="Clean"  command_options="1"
     protected="1" local="1"  no_selection="1">
         Clean local caches.
     <option loption="repo" parameter="alias|#URI">
-r, --repo 'alias|#|URI' Clean only specified repositories.
     </option>
     <option loption="type" parameter="type">
-t, --type 'type'           Type of package (package, patch, pattern, product, srcpackage).
     </option>
     <option loption="metadata">
-m, --metadata           Clean metadata cache.
     </option>
     <option loption="raw-metadata">
-M, --raw-metadata       Clean raw metadata cache.
     </option>
     <option loption="all">
-a, --all                Clean both metadata and package caches.
     </option>

    </action>

    <action pkg="zypper" cmd="-n list-updates" string="List"  command_options="1"
       no_selection="1"  icon="xffm/stock_index">
              List available updates.

              This command will list only installable  updates,  i.e.  updates
              which  have no dependency problems, or which do not change pack-
              age vendor. This list is what the update command will propose to
              install. To list all packages for which newer version are avail-
              able, use --all option.
     <option loption="repo" parameter="alias|#URI">
-r, --repo 'alias|#|URI'      List only updates from the specified repository.
     </option>
     <option loption="type" parameter="type">
-t, --type 'type'             Type of package (package, patch, pattern, product).
                              Default: package.
     </option>
     <option loption="best-effort">
    --best-effort             Do a 'best effort' approach to update. Updates
                              to a lower than the latest version are
                              also acceptable.
     </option>
     <option loption="all">
-a, --all                     List all packages for which newer versions are
                              available, regardless whether they are
                              installable or not.
     </option>

    </action>
 </zypper>
</rodent_pkg>
