message(STATUS "Checking for mntent.h...")
find_path(MNTENT_H  NAMES mntent.h )
if(NOT MNTENT_H)
    set(MNTENT_H "MNTENT_H_NOTFOUND")
    message( STATUS "mntent.h is not found" )
else()
    set(MNTENT_H "HAVE_MNTENT_H 1")
    message( STATUS  "mntent.h was found." )
endif()

message(STATUS "Checking for sys/param.h...")
find_path(SYS_PARAM_H  NAMES sys/param.h )
if(NOT SYS_PARAM_H)
    set(SYS_PARAM_H "SYS_PARAM_H_NOTFOUND")
    message( STATUS "sys/param.h is not found" )
else()
    set(SYS_PARAM_H "HAVE_SYS_PARAM_H 1")
    message( STATUS  "sys/param.h was found." )
endif()


message(STATUS "Checking for sys/mount.h...")
find_path(SYS_MOUNT_H  NAMES sys/mount.h )
if(NOT SYS_MOUNT_H)
    set(SYS_MOUNT_H "SYS_MOUNT_H_NOTFOUND")
    message( STATUS "sys/mount.h is not found" )
else()
    set(SYS_MOUNT_H "HAVE_SYS_MOUNT_H 1")
    message( STATUS  "sys/mount.h was found." )
endif()


message(STATUS "Checking for sys/types.h...")
find_path(SYS_TYPES_H  NAMES sys/types.h )
if(NOT SYS_TYPES_H)
    set(SYS_TYPES_H "SYS_TYPES_H_NOTFOUND")
    message( STATUS "sys/types.h is not found" )
else()
    set(SYS_TYPES_H "HAVE_SYS_TYPES_H 1")
    message( STATUS  "sys/types.h was found." )
endif()


message(STATUS "Checking for sys/sysctl.h...")
find_path(SYS_SYSCTL_H  NAMES sys/sysctl.h )
if(NOT SYS_SYSCTL_H)
    set(SYS_SYSCTL_H "SYS_SYSCTL_H_NOTFOUND")
    message( STATUS "sys/sysctl.h is not found" )
else()
    set(SYS_SYSCTL_H "HAVE_SYS_SYSCTL_H 1")
    message( STATUS  "sys/sysctl.h was found." )
endif()


message(STATUS "Checking for readline/history.h...")
find_path(READLINE_HISTORY_H  NAMES readline/history.h )
if(NOT READLINE_HISTORY_H)
    set(READLINE_HISTORY_H "READLINE_HISTORY_H_NOTFOUND")
    message( STATUS "readline/history.h is not found" )
else()
    set(READLINE_HISTORY_H "HAVE_READLINE_HISTORY_H 1")
    message( STATUS  "readline/history.h was found." )
endif()
message(STATUS "Checking for signal.h...")
find_path(SIGNAL_H  NAMES signal.h )
if(NOT SIGNAL_H)
    set(SIGNAL_H "SIGNAL_H_NOTFOUND")
    message( STATUS "signal.h is not found" )
else()
    set(SIGNAL_H "HAVE_SIGNAL_H 1")
    message( STATUS  "signal.h was found." )
endif()

message(STATUS "Checking for signal.h...")
find_path(SIGNAL_H  NAMES signal.h )
if(NOT SIGNAL_H)
    set(SIGNAL_H "SIGNAL_H_NOTFOUND")
    message( STATUS "signal.h is not found" )
else()
    set(SIGNAL_H "HAVE_SIGNAL_H 1")
    message( STATUS  "signal.h was found." )
endif()

message(STATUS "Checking for magic.h...")
find_path(MAGIC_H  NAMES magic.h )
if(NOT MAGIC_H)
    set(MAGIC_H "MAGIC_H_NOTFOUND")
    message( STATUS "magic.h is not found" )
else()
    set(MAGIC_H "HAVE_MAGIC_H 1")
    message( STATUS  "magic.h was found." )
    set(LIBMAGIC_LIBRARIES "-lmagic")
    set(LIBMAGIC_FOUND "1")
endif()

