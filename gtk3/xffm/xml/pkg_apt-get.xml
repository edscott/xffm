<?xml version="1.0"?>
<rodent_pkg xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="rodent-pkg.xsd">
 <apt-get>
    <confirm string="[Y/n]"/>
    <confirm string="[y/N]"/>
        <option loption="assume-yes">
           Automatic yes to prompts; assume "yes" as answer to all prompts and run
           non-interactively. If an undesirable situation, such as changing a held
           package, trying to install a unauthenticated package or removing an essential
           package occurs then apt-get will abort. Configuration Item:
           APT::Get::Assume-Yes.
        </option>
        <option loption="assume-no">
           Automatic "no" to all prompts. Configuration Item: APT::Get::Assume-No.
        </option>
        <option loption="no-install-recommends">
           Do not consider recommended packages as a dependency for installing.
           Configuration Item: APT::Install-Recommends.
        </option>
        <option loption="install-suggests">
           Consider suggested packages as a dependency for installing. Configuration Item:
           APT::Install-Suggests.
        </option>
        <option loption="download-only">
           Download only; package files are only retrieved, not unpacked or installed.
           Configuration Item: APT::Get::Download-Only.
        </option>
        <option loption="fix-broken">
           Fix; attempt to correct a system with broken dependencies in place. This
           option, when used with install/remove, can omit any packages to permit APT to
           deduce a likely solution. If packages are specified, these have to completely
           correct the problem. The option is sometimes necessary when running APT for the
           first time; APT itself does not allow broken package dependencies to exist on a
           system. It is possible that a system's dependency structure can be so corrupt
           as to require manual intervention (which usually means using dselect(1) or dpkg
           --remove to eliminate some of the offending packages). Use of this option
           together with -m may produce an error in some situations. Configuration Item:
           APT::Get::Fix-Broken.
        </option>
        <option loption="fix-missing">
           Ignore missing packages; if packages cannot be retrieved or fail the integrity
           check after retrieval (corrupted package files), hold back those packages and
           handle the result. Use of this option together with -f may produce an error in
           some situations. If a package is selected for installation (particularly if it
           is mentioned on the command line) and it could not be downloaded then it will
           be silently held back. Configuration Item: APT::Get::Fix-Missing.
        </option>
        <option loption="no-download">
           Disables downloading of packages. This is best used with --ignore-missing to
           force APT to use only the .debs it has already downloaded. Configuration Item:
           APT::Get::Download.
        </option>
        <option loption="quiet">
           Quiet; produces output suitable for logging, omitting progress indicators. More
           q's will produce more quiet up to a maximum of 2. You can also use -q=# to set
           the quiet level, overriding the configuration file. Note that quiet level 2
           implies -y; you should never use -qq without a no-action modifier such as -d,
           --print-uris or -s as APT may decide to do something you did not expect.
           Configuration Item: quiet.
        </option>
        <option loption="dry-run">
           No action; perform a simulation of events that would occur but do not actually
           change the system. Configuration Item: APT::Get::Simulate.

           Simulated runs performed as a user will automatically deactivate locking
           (Debug::NoLocking), and if the option APT::Get::Show-User-Simulation-Note is
           set (as it is by default) a notice will also be displayed indicating that this
           is only a simulation. Runs performed as root do not trigger either NoLocking or
           the notice - superusers should know what they are doing without further
           warnings from apt-get.

           Simulated runs print out a series of lines, each representing a dpkg operation:
           configure (Conf), remove (Remv) or unpack (Inst). Square brackets indicate
           broken packages, and empty square brackets indicate breaks that are of no
           consequence (rare).
        </option>
        <option loption="show-upgraded">
           Show upgraded packages; print out a list of all packages that are to be
           upgraded. Configuration Item: APT::Get::Show-Upgraded.
        </option>
        <option loption="verbose-versions">
           Show full versions for upgraded and installed packages. Configuration Item:
           APT::Get::Show-Versions.
        </option>
        <option loption="host-architecture">
           This option controls the architecture packages are built for by apt-get source
           --compile and how cross-builddependencies are satisfied. By default is it not
           set which means that the host architecture is the same as the build
           architecture (which is defined by APT::Architecture). Configuration Item:
           APT::Get::Host-Architecture
        </option>
        <option loption="compile">
           Compile source packages after downloading them. Configuration Item:
           APT::Get::Compile.
        </option>
        <option loption="ignore-hold">
           Ignore package holds; this causes apt-get to ignore a hold placed on a package.
           This may be useful in conjunction with dist-upgrade to override a large number
           of undesired holds. Configuration Item: APT::Ignore-Hold.
        </option>
        <option loption="no-upgrade">
           Do not upgrade packages; when used in conjunction with install, no-upgrade will
           prevent packages on the command line from being upgraded if they are already
           installed. Configuration Item: APT::Get::Upgrade.
        </option>
        <option loption="only-upgrade">
           Do not install new packages; when used in conjunction with install,
           only-upgrade will install upgrades for already installed packages only and
           ignore requests to install new packages. Configuration Item:
           APT::Get::Only-Upgrade.
        </option>
        <option loption="force-yes">
           Force yes; this is a dangerous option that will cause apt to continue without
           prompting if it is doing something potentially harmful. It should not be used
           except in very special situations. Using force-yes can potentially destroy your
           system! Configuration Item: APT::Get::force-yes.
        </option>
        <option loption="print-uris">
           Instead of fetching the files to install their URIs are printed. Each URI will
           have the path, the destination file name, the size and the expected MD5 hash.
           Note that the file name to write to will not always match the file name on the
           remote site! This also works with the source and update commands. When used
           with the update command the MD5 and size are not included, and it is up to the
           user to decompress any compressed files. Configuration Item:
           APT::Get::Print-URIs.
        </option>
        <option loption="purge">
           Use purge instead of remove for anything that would be removed. An asterisk
           ("*") will be displayed next to packages which are scheduled to be purged.
           remove --purge is equivalent to the purge command. Configuration Item:
           APT::Get::Purge.
        </option>
        <option loption="reinstall">
           Re-install packages that are already installed and at the newest version.
           Configuration Item: APT::Get::ReInstall.
        </option>
        <option loption="list-cleanup">
           This option is on by default; use --no-list-cleanup to turn it off. When it is
           on, apt-get will automatically manage the contents of /var/lib/apt/lists to
           ensure that obsolete files are erased. The only reason to turn it off is if you
           frequently change your sources list. Configuration Item:
           APT::Get::List-Cleanup.
        </option>
        <option loption="default-release">
           This option controls the default input to the policy engine; it creates a
           default pin at priority 990 using the specified release string. This overrides
           the general settings in /etc/apt/preferences. Specifically pinned packages are
           not affected by the value of this option. In short, this option lets you have
           simple control over which distribution packages will be retrieved from. Some
           common examples might be -t '2.1*', -t unstable or -t sid. Configuration Item:
           APT::Default-Release; see also the apt_preferences(5) manual page.
        </option>
        <option loption="trivial-only">
           Only perform operations that are 'trivial'. Logically this can be considered
           related to --assume-yes; where --assume-yes will answer yes to any prompt,
           --trivial-only will answer no. Configuration Item: APT::Get::Trivial-Only.
        </option>
        <option loption="no-remove">
           If any packages are to be removed apt-get immediately aborts without prompting.
           Configuration Item: APT::Get::Remove.
        </option>
        <option loption="auto-remove">
           If the command is either install or remove, then this option acts like running
           the autoremove command, removing unused dependency packages. Configuration
           Item: APT::Get::AutomaticRemove.
        </option>
        <option loption="only-source">
           Only has meaning for the source and build-dep commands. Indicates that the
           given source names are not to be mapped through the binary table. This means
           that if this option is specified, these commands will only accept source
           package names as arguments, rather than accepting binary package names and
           looking up the corresponding source package. Configuration Item:
           APT::Get::Only-Source.
        </option>
        <option loption="diff-only">
           Download only the diff file of a source archive. Configuration
           Item: APT::Get::Diff-Only.
        </option>
        <option loption="dsc-only">
           Download only the dsc file of a source archive. Configuration
           Item: APT::Get::Dsc-Only.
        </option>
        <option loption="tar-only">
           Download only the tar file of a source archive. Configuration
           Item: APT::Get::Tar-Only.
        </option>
        <option loption="arch-only">
           Only process architecture-dependent build-dependencies. Configuration Item:
           APT::Get::Arch-Only.
        </option>
        <option loption="allow-unauthenticated">
           Ignore if packages can't be authenticated and don't prompt about it. This is
           useful for tools like pbuilder. Configuration Item:
           APT::Get::AllowUnauthenticated.
        </option>
        <option loption="help">
           Show a short usage summary.
        </option>
        <option loption="version">
           Show the program version.
        </option>
        <option loption="config-file">
           Configuration File; Specify a configuration file to use. The program will read
           the default configuration file and then this configuration file. If
           configuration settings need to be set before the default configuration files
           are parsed specify a file with the APT_CONFIG environment variable. See
           apt.conf(5) for syntax information.
        </option>
        <option loption="option">
           Set a Configuration Option; This will set an arbitrary configuration option.
           The syntax is -o Foo::Bar=bar.  -o and --option can be used multiple times to
           set different options.
        </option>
   <!--  full apt command with actions: -->
    <action pkg="apt-get"   command_options="1" actions="1" string="apt-get"
    protected="1" local="1" remote="1" no_selection="1" argument="action argument (if any)"
     icon="xffm/emblem_debian">
     apt-get is the command-line tool for handling packages, and may be considered the
     user's "back-end" to other tools using the APT library. Several "front-end"
     interfaces exist, such as dselect(1), aptitude(8), synaptic(8) and wajig(1).       

        apt-get [-asqdyfmubV] [-o=config_string] [-c=config_file] [-t=target_release]
               [-a=architecture] {update | upgrade | dselect-upgrade | dist-upgrade |
               install pkg [{=pkg_version_number | /target_release}]...  | remove pkg...
               | purge pkg...  | source pkg [{=pkg_version_number | /target_release}]...
               | build-dep pkg [{=pkg_version_number | /target_release}]...  |
               download pkg [{=pkg_version_number | /target_release}]...  | check | clean
               | autoclean | autoremove | {-v | --version} | {-h | --help}}

    </action>
    <action pkg="apt-get" cmd="update" command_options="1"
       no_selection="1"  >
           update is used to resynchronize the package index files from their sources. The
           indexes of available packages are fetched from the location(s) specified in
           /etc/apt/sources.list. For example, when using a Debian archive, this command
           retrieves and scans the Packages.gz files, so that information about new and
           updated packages is available. An update should always be performed before an
           upgrade or dist-upgrade. Please be aware that the overall progress meter will
           be incorrect as the size of the package files cannot be known in advance.
    </action>
    <action pkg="apt-get" cmd="upgrade" command_options="1"
       no_selection="1"  >
           upgrade is used to install the newest versions of all packages currently
           installed on the system from the sources enumerated in /etc/apt/sources.list.
           Packages currently installed with new versions available are retrieved and
           upgraded; under no circumstances are currently installed packages removed, or
           packages not already installed retrieved and installed. New versions of
           currently installed packages that cannot be upgraded without changing the
           install status of another package will be left at their current version. An
           update must be performed first so that apt-get knows that new versions of
           packages are available.
    </action>
    <action pkg="apt-get" cmd="dist-upgrade" command_options="1"
       no_selection="1"  >
           dist-upgrade in addition to performing the function of upgrade, also
           intelligently handles changing dependencies with new versions of packages;
           apt-get has a "smart" conflict resolution system, and it will attempt to
           upgrade the most important packages at the expense of less important ones if
           necessary. The dist-upgrade command may therefore remove some packages. The
           /etc/apt/sources.list file contains a list of locations from which to retrieve
           desired package files. See also apt_preferences(5) for a mechanism for
           overriding the general settings for individual packages.
    </action>
    <action pkg="apt-get" cmd="dselect-upgrade" command_options="1"
       no_selection="1"  >
           dselect-upgrade is used in conjunction with the traditional Debian packaging
           front-end, dselect(1).  dselect-upgrade follows the changes made by dselect(1)
           to the Status field of available packages, and performs the actions necessary
           to realize that state (for instance, the removal of old and the installation of
           new packages).
    </action>
    <action pkg="apt-get" cmd="install" command_options="1"
       no_selection="1"  >
           install is followed by one or more packages desired for installation or
           upgrading. Each package is a package name, not a fully qualified filename (for
           instance, in a Debian system, apt-utils would be the argument provided, not
           apt-utils_0.9.7.9_amd64.deb). All packages required by the package(s) specified
           for installation will also be retrieved and installed. The
           /etc/apt/sources.list file is used to locate the desired packages. If a hyphen
           is appended to the package name (with no intervening space), the identified
           package will be removed if it is installed. Similarly a plus sign can be used
           to designate a package to install. These latter features may be used to
           override decisions made by apt-get's conflict resolution system.
    </action>
    <action pkg="apt-get" cmd="remove" command_options="1"
       no_selection="1"  >
           remove is identical to install except that packages are removed instead of
           installed. Note that removing a package leaves its configuration files on the
           system. If a plus sign is appended to the package name (with no intervening
           space), the identified package will be installed instead of removed.
    </action>
    <action pkg="apt-get" cmd="purge" command_options="1"
       no_selection="1"  >
    </action>
     <action pkg="apt-get" cmd="source" command_options="1"
       no_selection="1"  >
           source causes apt-get to fetch source packages. APT will examine the available
           packages to decide which source package to fetch. It will then find and
           download into the current directory the newest available version of that source
           package while respecting the default release, set with the option
           APT::Default-Release, the -t option or per package with the pkg/release syntax,
           if possible.
    </action>
    <action pkg="apt-get" cmd="build-dep" command_options="1"
       no_selection="1"  >
           build-dep causes apt-get to install/remove packages in an attempt to satisfy
           the build dependencies for a source package. By default the dependencies are
           satisfied to build the package natively. If desired a host-architecture can be
           specified with the --host-architecture option instead.
    </action>
    <action pkg="apt-get" cmd="check" command_options="1"
       no_selection="1"  >
           check is a diagnostic tool; it updates the package cache and checks for broken
           dependencies.
    </action>
    <action pkg="apt-get" cmd="download" command_options="1"
       no_selection="1"  >
           download will download the given binary package into the current directory.

    </action>
    <action pkg="apt-get" cmd="clean" command_options="1"
       no_selection="1"  >
           clean clears out the local repository of retrieved package files. It removes
           everything but the lock file from /var/cache/apt/archives/ and
           /var/cache/apt/archives/partial/. When APT is used as a dselect(1) method,
           clean is run automatically. Those who do not use dselect will likely want to
           run apt-get clean from time to time to free up disk space.
    </action>
   <action pkg="apt-get" cmd="autoclean" command_options="1"
       no_selection="1"  >
           Like clean, autoclean clears out the local repository of retrieved package
           files. The difference is that it only removes package files that can no longer
           be downloaded, and are largely useless. This allows a cache to be maintained
           over a long period without it growing out of control. The configuration option
           APT::Clean-Installed will prevent installed packages from being erased if it is
           set to off.
    </action>
   <action pkg="apt-get" cmd="autoremove" command_options="1"
       no_selection="1"  >
           autoremove is used to remove packages that were automatically installed to
           satisfy dependencies for other packages and are now no longer needed.
    </action>
   <action pkg="apt-get" cmd="changelog" command_options="1"
       no_selection="1"  >
           changelog downloads a package changelog and displays it through sensible-pager.
           The server name and base directory is defined in the APT::Changelogs::Server
           variable (e.g.  packages.debian.org/changelogs[1] for Debian or
           changelogs.ubuntu.com/changelogs[2] for Ubuntu). By default it displays the
           changelog for the version that is installed. However, you can specify the same
           options as for the install command.
    </action>


<!-- ad hoc actions -->

<!-- here goes download -->
    <action pkg="apt-get" cmd="-y install --download-only" string="Download"  
     command_options="1"
     protected="1" remote="1" icon="xffm/emblem_blueball"  no_selection="1"
     argument="package">
           Download only; package files are only retrieved, not unpacked or installed.
           Configuration Item: APT::Get::Download-Only.           
     </action>
    <action pkg="dpkg" cmd="--status" string="Status" scroll_up="1"
     local="1" remote="1" icon="xffm/emblem_about"  no_selection="1"
     argument="package">
      Report status of specified package. 
     </action>
    <action pkg="apt-get" cmd="-y install" string="Install"  command_options="1"
     protected="1" remote="1" icon="xffm/emblem_greenball"  no_selection="1"
     argument="package">
           install is followed by one or more packages desired for installation or
           upgrading. Each package is a package name, not a fully qualified filename (for
           instance, in a Debian system, apt-utils would be the argument provided, not
           apt-utils_0.9.7.9_amd64.deb). All packages required by the package(s) specified
           for installation will also be retrieved and installed. The
           /etc/apt/sources.list file is used to locate the desired packages. If a hyphen
           is appended to the package name (with no intervening space), the identified
           package will be removed if it is installed. Similarly a plus sign can be used
           to designate a package to install. These latter features may be used to
           override decisions made by apt-get's conflict resolution system.
     </action>

    <action pkg="apt-get" cmd="-y remove" string="Uninstall"  command_options="1"
     icon="xffm/stock_remove" protected="1" local="1"  no_selection="1"
     argument="package">
           remove is identical to install except that packages are removed instead of
           installed. Note that removing a package leaves its configuration files on the
           system. If a plus sign is appended to the package name (with no intervening
           space), the identified package will be installed instead of removed.
    </action>

    <action pkg="apt-get" cmd="-y upgrade" string="Upgrade"  command_options="1"
     protected="1" remote="1" local="1" no_selection="1"
     icon="xffm/emblem_synchronized"  
     argument="package">
           upgrade is used to install the newest versions of all packages currently
           installed on the system from the sources enumerated in /etc/apt/sources.list.
           Packages currently installed with new versions available are retrieved and
           upgraded; under no circumstances are currently installed packages removed, or
           packages not already installed retrieved and installed. New versions of
           currently installed packages that cannot be upgraded without changing the
           install status of another package will be left at their current version. An
           update must be performed first so that apt-get knows that new versions of
           packages are available.
    </action>

    <action pkg="apt-cache" cmd="search" string="Search"  icon="xffm/emblem_find"
     no_selection="1"
     argument="pattern/pkg_name">
     <option loption="names-only">
          Only search on the package names, not the long descriptions. Configuration
           Item: APT::Cache::NamesOnly.
     </option>
     <option loption="full">
           Print full package records when searching. Configuration Item:
           APT::Cache::ShowFull.
     </option>
    Search for string in remote and local package names.
    </action>

    <action pkg="apt-get" cmd="-y update" string="Refresh"  command_options="1"
     no_selection="1" protected="1"  icon="xffm/emblem_synchronized">
            update is used to resynchronize the package index files from their sources. The
           indexes of available packages are fetched from the location(s) specified in
           /etc/apt/sources.list. For example, when using a Debian archive, this command
           retrieves and scans the Packages.gz files, so that information about new and
           updated packages is available. An update should always be performed before an
           upgrade or dist-upgrade. Please be aware that the overall progress meter will
           be incorrect as the size of the package files cannot be known in advance.
   </action>
    <action pkg="apt-get" cmd="-y clean" string="Clean"  command_options="1"
     protected="1" local="1"  no_selection="1">
           clean clears out the local repository of retrieved package files. It removes
           everything but the lock file from /var/cache/apt/archives/ and
           /var/cache/apt/archives/partial/. When APT is used as a dselect(1) method,
           clean is run automatically. Those who do not use dselect will likely want to
           run apt-get clean from time to time to free up disk space.
     </action>


 </apt-get>
</rodent_pkg>
